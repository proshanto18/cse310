### পাইথন ভেরিয়েবল: লেকচার নোটস  

#### ১. ভেরিয়েবল কি?  
ভেরিয়েবল হলো এমন একটি নামকৃত স্থান যেখানে ডেটা সংরক্ষণ করা হয়। পাইথনে ভেরিয়েবল ডাইনামিক, অর্থাৎ এটি স্বয়ংক্রিয়ভাবে তার ডেটার ধরন নির্ধারণ করতে পারে।  

#### ২. ভেরিয়েবলের নামকরণের নিয়ম  
ভেরিয়েবলের নামকরণের সময় কিছু নিয়ম অনুসরণ করতে হবে:  
- নামটি অবশ্যই একটি অক্ষর (a-z বা A-Z) অথবা আন্ডারস্কোর (_) দিয়ে শুরু করতে হবে।  
- নামটি সংখ্যা দিয়ে শুরু করা যাবে না।  
- নামটি শুধুমাত্র অক্ষর, সংখ্যা এবং আন্ডারস্কোর থাকতে পারবে।  
- পাইথনের রিজার্ভড কীওয়ার্ড ব্যবহার করা যাবে না (যেমন: `if`, `else`, `for`, ইত্যাদি)।  
- ভেরিয়েবলের নাম সংবেদনশীল (case-sensitive), অর্থাৎ `Name` এবং `name` আলাদা।  

#### ৩. ভেরিয়েবল ডিক্লেয়ার এবং মান নির্ধারণ  
পাইথনে ডিক্লেয়ারেশন এবং মান নির্ধারণ সহজ:  
```python
x = 10          # ইন্টিজার
name = "Alice"  # স্ট্রিং
pi = 3.14       # ফ্লোট
```

#### ৪. একাধিক মান নির্ধারণ  
একাধিক ভেরিয়েবলে একসঙ্গে মান নির্ধারণ করা যায়:  
```python
a, b, c = 1, 2, 3
```

#### ৫. একই মান নির্ধারণ  
একাধিক ভেরিয়েবলে একই মান নির্ধারণ করা যায়:  
```python
x = y = z = 100
```

#### ৬. ডেটা টাইপ  
পাইথনে ভেরিয়েবলের ডেটা টাইপ স্বয়ংক্রিয়ভাবে নির্ধারিত হয়। সাধারণ ডেটা টাইপগুলো হলো:  
- **ইন্টিজার (int):** পূর্ণসংখ্যা।  
  উদাহরণ: `x = 5`  
- **ফ্লোট (float):** দশমিক সংখ্যা।  
  উদাহরণ: `y = 3.14`  
- **স্ট্রিং (str):** টেক্সট।  
  উদাহরণ: `name = "Alice"`  
- **বুলিয়ান (bool):** সত্য বা মিথ্যা।  
  উদাহরণ: `flag = True`  

#### ৭. গ্লোবাল এবং লোকাল ভেরিয়েবল  
- **লোকাল ভেরিয়েবল:** ফাংশনের ভিতরে ডিক্লেয়ার করা ভেরিয়েবল, যা শুধুমাত্র সেই ফাংশনের মধ্যে অ্যাক্সেস করা যায়।  
  ```python
  def my_function():
      local_var = 10
      print(local_var)
  ```  
- **গ্লোবাল ভেরিয়েবল:** প্রোগ্রামের যে কোনো স্থানে অ্যাক্সেস করা যায়।  
  ```python
  global_var = 20
  def my_function():
      print(global_var)
  ```

#### ৮. ইনপুট দিয়ে ভেরিয়েবল  
ইউজারের ইনপুট দিয়ে ভেরিয়েবল তৈরি করা যায়:  
```python
name = input("তোমার নাম কী? ")
print("তোমার নাম:", name)
```

#### ৯. ভেরিয়েবল মুছে ফেলা  
পাইথনে ভেরিয়েবল মুছে ফেলতে `del` ব্যবহার করা হয়:  
```python
x = 10
del x
```

#### ১০. গুরুত্বপূর্ণ টিপস  
- ভেরিয়েবলের নাম অর্থবহ হওয়া উচিত।  
- প্রয়োজন না হলে গ্লোবাল ভেরিয়েবল ব্যবহার করবেন না।  
- কোড পড়তে সহজ করার জন্য কনভেনশন অনুযায়ী নামকরণ করুন।  

এগুলোই ভেরিয়েবলের মৌলিক ধারণা। এগুলো ভালোভাবে বুঝলে পাইথনে কোডিং করা আরও সহজ হয়ে যাবে।